name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '0 15 * * *'
  push:
    branches: [ master ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      docker-name:
          description: 'Service name for pulling & publishing'     
          required: true
          default: 'frontend'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build-github-pages:
    permissions: 
      contents: write
    runs-on: ubuntu-latest
    env:
      VUE_APP_API_URL: "http://devapi.sunrint.life/"
      PUBLIC_PATH: /${{ github.event.repository.name }}
      node-version: 16.x
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ env.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.node-version }}
        cache: 'npm'
    - name: Generate vue.config.js for github pages
      run: |
        wget https://gist.githubusercontent.com/rmagur1203/6b4080637f28f8d979daf20bf6a372d5/raw/26794a6ea1e07e9e9fe01797448c54a117e84dec/vue.config.js
    - run: npm ci
    - run: npm run build --if-present
    - name: deploy
      uses: JamesIves/github-pages-deploy-action@v4.3.3
      with:
        branch: github-pages
        folder: dist
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@d6a3abf1bdea83574e28d40543793018b6035605
        with:
          cosign-release: 'v1.9.0'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: |
          content="${{ steps.meta.outputs.tags }}"
          content="${content//$'\n'/'@${{ steps.build-and-push.outputs.digest }}; cosign sign '}"
          content="${content//$'\r'/''}"
          echo "cosign sign $content"
          echo "cosign sign $content" | /bin/bash
  deploy:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: pulling & publishing
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          passphrase: ${{ secrets.REMOTE_SSH_PASSPHRASE }}
          script: |
            cd Sunrinlife_Docker/
            docker-compose pull ${{ github.event.inputs.docker-name }}
            docker-compose up -d ${{ github.event.inputs.docker-name }}
